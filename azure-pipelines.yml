# ASP.NET
# Build and test ASP.NET projects.
# Add steps that publish symbols, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/apps/aspnet/build-aspnet-4

trigger:
- main

pool:
  vmImage: 'windows-latest'

variables:
  solution: '**/*.sln'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'

steps:
- task: NuGetToolInstaller@1

- task: NuGetCommand@2
  inputs:
    restoreSolution: '$(solution)'

- task: CopyFiles@2
  displayName: 'Copy scripts to staging dir'
  inputs:
    SourceFolder: '$(System.DefaultWorkingDirectory)'
    Contents: |
      scripts\**
    TargetFolder: '$(Build.BinariesDirectory)\Release'
    flattenFolders: false
      
- task: VSBuild@1
  inputs:
    solution: '$(Build.SourcesDirectory)\SfHelloWorldApi\SfHelloWorldApi\SfHelloWorldApi.sfproj'
    msbuildArgs: '/t:Package /p:PackageLocation=$(Build.BinariesDirectory)\Release\Applications\SfHelloWorldApi\Pkg\release'
    platform: 'x64'
    configuration: '$(buildConfiguration)'

# Publish SF App Package to the Pipeline
- task: PublishBuildArtifacts@1
  inputs:
    PathtoPublish: '$(Build.BinariesDirectory)\Release'
    ArtifactName: 'SfHelloWorldApi_dev'
    publishLocation: 'Container'

# Deploy Backend Service Fabric Application
- task: ServiceFabricDeploy@1
  displayName: 'Deploy test using task'
  inputs:
    applicationPackagePath: '$(Build.BinariesDirectory)\Release\Applications\SfHelloWorldApi\Pkg\release'
    serviceConnectionName: '$(ServiceConnectionName)'
    # applicationParameterPath: '$(Pipeline.Workspace)\InfrastructureArtifacts_${{ parameters.Environment }}\Backend.xml'
    overwriteBehavior: 'always'
    overridePublishProfileSettings: true
    upgradeMode: 'Monitored'
    FailureAction: 'Rollback'
    isUpgrade: true