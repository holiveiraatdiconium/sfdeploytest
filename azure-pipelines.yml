# ASP.NET
# Build and test ASP.NET projects.
# Add steps that publish symbols, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/apps/aspnet/build-aspnet-4

trigger:
- main

pool:
  vmImage: 'windows-latest'

variables:
  solution: '**/*.sln'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'

steps:
- task: NuGetToolInstaller@1

- task: NuGetCommand@2
  inputs:
    restoreSolution: '$(solution)'

- task: CopyFiles@2
  displayName: 'Copy scripts to staging dir'
  inputs:
    SourceFolder: '$(System.DefaultWorkingDirectory)'
    Contents: |
      scripts\**
    TargetFolder: '$(Build.BinariesDirectory)\Release'
    flattenFolders: false
      
- task: VSBuild@1
  inputs:
    solution: '$(Build.SourcesDirectory)\SfHelloWorldApi\SfHelloWorldApi\SfHelloWorldApi.sfproj'
    msbuildArgs: '/t:Package /p:PackageLocation=$(Build.BinariesDirectory)\Release\Applications\SfHelloWorldApi\Pkg\release'
    platform: 'x64'
    configuration: '$(buildConfiguration)'

# Publish SF App Package to the Pipeline
- task: PublishBuildArtifacts@1
  inputs:
    PathtoPublish: '$(Build.BinariesDirectory)\Release'
    ArtifactName: 'SfHelloWorldApi_dev'
    publishLocation: 'Container'

# Get certificate
- task: AzurePowerShell@5
  displayName: 'Get the self signed certificate from the Key Vault'
  inputs:
    azureSubscription: 'ccg-arm-ccg-suu'
    ScriptType: 'InlineScript'
    azurePowerShellVersion: 'latestVersion'
    Inline: |
      $vaultName = "$(KeyVaultName)"
      $certName = "$(CertNameInKv)"
      $cert = Get-AzKeyVaultCertificate -VaultName $vaultName -Name $certName
      $secret = Get-AzKeyVaultSecret -VaultName $vaultName -Name $cert.Name -AsPlainText
      $secretByte = [Convert]::FromBase64String($secret)
      Write-Host "##vso[task.setvariable variable=SscTumbprint;]$($cert.Thumbprint)"
      # Write to a file
      [System.IO.File]::WriteAllBytes("self-signed-2021.pfx", $secretByte)

- task: AzurePowerShell@5
  displayName: 'Install certificate into LocalMachine Store'
  inputs:
    azureSubscription: '${{ parameters.ArmConnection }}'
    ScriptType: 'InlineScript'
    azurePowerShellVersion: 'latestVersion'
    Inline: |
      $pfxpath = "./self-signed-2021.pfx"
      $password = ""
      Add-Type -AssemblyName System.Security
      $cert = New-Object System.Security.Cryptography.X509Certificates.X509Certificate2([System.String]$pfxpath, [System.String]$password, [System.Security.Cryptography.X509Certificates.X509KeyStorageFlags]"PersistKeySet")
      $store = new-object system.security.cryptography.X509Certificates.X509Store -argumentlist "MY", LocalMachine
      $store.Open([System.Security.Cryptography.X509Certificates.OpenFlags]"ReadWrite")
      $store.Add($cert)
      $store.Close()

- task: Bash@3
  inputs:
    targetType: 'inline'
    script: |
        find "$(Pipeline.Workspace)" -type f

# - task: AzurePowerShell@5
#   displayName: 'Deploy test'
#   inputs:
#     ScriptType: 'filePath'
#     ScriptPath: '$(Build.SourcesDirectory)/scripts/sf-deploy.ps1'
#     azureSubscription: 'ccg-arm-ccg-suu'
#     azurePowerShellVersion: 'OtherVersion'
#     preferredAzurePowerShellVersion: '5.1.0'
#     ScriptArguments: -thumbprint $(Thumbprint) -appName SfHelloWorldApi -clusterendpoint $(ClusterEndpoint) -packagepath ./SfHelloWorldApi/HelloWorldService/bin/x64/Release -imageStoreConnectionString fabric:ImageStore


